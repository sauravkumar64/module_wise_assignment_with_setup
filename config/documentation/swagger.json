{
  "swagger": "2.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Harish User management system",
    "contact": { "email": "harish.g@applify.co" },
    "license": {
      "name": "",
      "url": ""
    }
  },
  "schemes": ["http", "https"],
  "tags": {
    "name": "Admin registration",
    "description": "users api"
  },
  "securityDefinitions": {
    "bearerAuth": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "JWT Authorization header"
    }
  },
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/user/AdminRegistration": {
      "post": {
        "summary": "Admin Registration",
        "tags": ["Admin registration"],
        "content": ["application/json"],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "enter name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Enter email",
            "required": "true",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Enter a password",
            "required": "true",
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Enter Super-Admin",
            "required": "true",
            "type": "string"
          },
          {
            "name": "IsAdmin",
            "in": "formData",
            "description": "Enter only 1 for admin",
            "required": "true",
            "type": "interger"
          }
        ],

        "responses": {
          "200": {
            "description": "Registration Successfull",
            "schema": {
              "type": "object"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "tags": {
      "name": "Admin registration",
      "description": "users api"
    },
    "/user/view": {
			"get": {
			
				"tags": [
					"User filter"
				],
				"description": "List all Users that are blocked or not blocked, but not deleted, alongwith count of users. And also we can filter admins by their name, if admin wants to see only blocked admins then apply blocked filter,",
				"parameters": [
					{
						"name": "limit",
						"description": "Limit",
						"in": "query",
						"required": true,
						"type": "integer",
						"value": "10"
					},
					{
						"name": "skip",
						"description": "Skip",
						"in": "query",
						"required": true,
						"type": "integer",
						"value": "0"
					},
					{
						"name": "sortBy",
						"description": "sort by",
						"in": "query",
						"required": false,
						"type": "string",
						"value": ""
					},
					{
						"name": "orderBy",
						"description": "order by",
						"in": "query",
						"required": false,
						"type": "string",
						"value": ""
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search",
						"type": "string",
						"value": ""
					},
					{
						"name": "Isblocked",
						"enum": [
							0,
							1
						],
						"description": "Blocked admin users",
						"in": "query",
						"type": "integer",
						"required": false
          }
				],
				"responses": {}
			}
		},
    "/user/block": {
      "put": {
        "summary": "Blocked user.Need to login first and need token",
        "content": ["application/json"],
        "parameters": [
          {
            "name": "adminId",
            "in": "formData",
            "description": "Enter AdminId",
            "required": "true",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Blocked Successfull",
            "schema": {
              "type": ""
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/unblock": {
      "put": {
        "summary": "UnBlocked user.Need to login first and need token",
        "content": ["application/json"],
        "parameters": [
          {
            "name": "adminId",
            "in": "formData",
            "description": "Enter AdminId",
            "required": "true",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "UnBlocked Successfull",
            "schema": {
              "type": ""
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/delete": {
      "delete": {
        "summary": "Delete user.Need to login first and need token",
        "content": ["application/json"],
        "parameters": [
          {
            "name": "adminId",
            "in": "formData",
            "description": "Enter AdminId",
            "required": "true",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Blocked Successfull",
            "schema": {
              "type": ""
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  }
}
